{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAQF,GAFR,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC9B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATnB,kBAaZM,GAbY,4CAAH,sDCAPO,EAAc,SAAC,GAA0B,IAAvBJ,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEtC,OADAc,QAAQC,IAAKN,EAAIC,EAAOV,GAEpB,sBAAKgB,UAAU,2CAAf,UACI,qBAAKC,IAAMjB,EAAMkB,IAAMR,IACvB,4BAAKA,QCHJS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EACVd,mBAAS,CACnCqB,KAAM,GACNe,SAAS,IAH2B,mBAC7BC,EAD6B,KACtBC,EADsB,KAmBxC,OAbAC,qBAAW,WACP1B,EAASC,GACR0B,MAAM,SAAAC,GAEHH,EAAS,CACLjB,KAAMoB,EACNL,SAAQ,SAIjB,CAACtB,IAGGuB,EDjBsBK,CAAc5B,GAAlCa,EAF4B,EAEjCN,KAAae,EAFoB,EAEpBA,QAEjB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDlB,IAElDsB,GAAW,mBAAGJ,UAAU,iCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEQL,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEdzBkB,EAAe,WAAK,IAAD,EACQ3C,mBAAS,CAAC,cADlB,mBACrB4C,EADqB,KACT7C,EADS,KAG5B,OAEI,cADA,CACA,sBACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEI6C,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAYA,GADNA,Y,MCZ9B+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.1eab9aab.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');//('Hola Mundo');\r\n    \r\n    const handleInputChange = ( e ) =>{        \r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue, ...cats] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async(category) =>{\r\n    const url= `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=gQSx6srcvjh8tmVjUk2PxzQYMb8cUri0`;\r\n    const resp = await fetch ( url );\r\n    const { data } = await resp.json();\r\n    \r\n    const gifs = data.map( img => {\r\n    return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url\r\n    }\r\n    });\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n    console.log( id, title, url );\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInUp\">\r\n            <img src={ url } alt={ title }/>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category }) => {\r\n\r\nconst { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>           \r\n            \r\n            { loading && <p className=\"animate__animated anime__flash\">Loading</p>}\r\n\r\n            <div className=\"card-grid\">                                   \r\n                {\r\n                    images.map( img =>(\r\n                        <GifGridItem\r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />                        \r\n                    ))\r\n                }                            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n        const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n        .then( imgs => {       \r\n            \r\n            setState({\r\n                data: imgs,\r\n                loading:false\r\n            });        \r\n    })\r\n\r\n    }, [category])\r\n\r\n    \r\n    return state;//(data [], loading:true);\r\n}\r\n","import React, {useState} from 'react';  \r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = ()=>{        \r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    \r\n    return (\r\n        // Fragment\r\n        <>\r\n            <h2>GifExpertApp</h2>  \r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr />            \r\n            \r\n            <ol>\r\n            { \r\n                categories.map( category => (\r\n                    <GifGrid \r\n                        key={ category }\r\n                        category= { category }\r\n                    />\r\n                ))\r\n            }                \r\n            </ol>            \r\n        </>    \r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(  \n    <GifExpertApp />,  \n  document.getElementById('root')\n);\n"],"sourceRoot":""}